import{C as t}from"./vendor.e2dd6d5a.js";window.deleteTask=p,window.updateTask=k,window.editTask=h;const e=document.getElementById("taskList");function n(){const n={Authorization:"Token "+localStorage.getItem("token")};t({headers:n,url:"https://todo-app-csoc.herokuapp.com/todo/",method:"GET"}).then((function({data:t,status:n}){console.log(t),e.innerHTML="";for(var a=0;a<t.length;a++)o(t[a].id,t[a].title)}))}function o(t,n){var o='\n    <li class="list-group-item d-flex justify-content-between align-items-center" class="taskElement" id="taskElement-REPLACE_ID">\n        <input id="input-button-REPLACE_ID" type="text" class="form-control todo-edit-task-input hideme" placeholder="Edit The Task">\n        <div id="done-button-REPLACE_ID"  class="input-group-append hideme">\n            <button class="btn btn-outline-secondary todo-update-task" type="button" id="updateTaskButtonREPLACE_ID" onclick="updateTask(REPLACE_ID)">Done</button>\n        </div>\n        <div id="task-REPLACE_ID" class="todo-task">\n            REPLACE_TASK_TITLE\n        </div>\n\n        <span id="task-actions-REPLACE_ID">\n            <button style="margin-right:5px;" type="button" id="editTaskButtonREPLACE_ID" class="btn btn-outline-warning" onclick="editTask(REPLACE_ID)">\n                <img src="https://res.cloudinary.com/nishantwrp/image/upload/v1587486663/CSOC/edit.png" width="18px" height="20px">\n            </button>\n            <button type="button" class="btn btn-outline-danger" id="deleteTaskButtonREPLACE_ID" onclick="deleteTask(REPLACE_ID)">\n                <img src="https://res.cloudinary.com/nishantwrp/image/upload/v1587486661/CSOC/delete.svg" width="18px" height="22px">\n            </button>\n        </span>\n    </li>\n    '.replace(/REPLACE_ID/g,t).replace("REPLACE_TASK_TITLE",n);e.innerHTML+=o}t({headers:{Authorization:"Token "+localStorage.getItem("token")},url:"https://todo-app-csoc.herokuapp.com/auth/profile/",method:"get"}).then((function({data:t,status:e}){document.getElementById("avatar-image").src="https://ui-avatars.com/api/?name="+t.name+"&background=fff&size=33&color=007bff",document.getElementById("profile-name").innerHTML=t.name,n()})),window.deleteTask=p,window.updateTask=k,window.editTask=h;const a=document.getElementById("taskList"),i=document.getElementById("logoutButton");i&&(i.onclick=function(){localStorage.removeItem("token"),window.location.href="/login/"});const s=document.getElementById("loginButton");s&&(s.onclick=function(){const e=document.getElementById("inputUsername").value.trim(),n=document.getElementById("inputPassword").value;if(""==e||""==n)return void r("Please enter the required fields.");m("Please wait...");t({url:g+"auth/login/",method:"POST",data:{username:e,password:n}}).then((function({data:t,status:e}){c("Login Successful..."),localStorage.setItem("token",t.token),window.location.href="/"})).catch((function(t){r("The credentials used are invalid."),document.getElementById("inputUsername").value="",document.getElementById("inputPassword").value=""}))});const d=document.getElementById("registerButton");d&&(d.onclick=function(){const e=document.getElementById("inputFirstName").value.trim(),n=document.getElementById("inputLastName").value.trim(),o=document.getElementById("inputEmail").value.trim(),a=document.getElementById("inputUsername").value.trim(),i=document.getElementById("inputPassword").value;if(function(t,e,n,o,a){if(""===t||""===e||""===n||""===o||""===a)return r("Please fill all the fields correctly."),!1;if(!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(n))return r("Please enter a valid email address."),!1;return!0}(e,n,o,a,i)){m("Please wait...");t({url:g+"auth/register/",method:"post",data:{name:e+" "+n,email:o,username:a,password:i}}).then((function({data:t,status:e}){localStorage.setItem("token",t.token),window.location.href="/"})).catch((function(t){r("An account using same email or username is already created")}))}});const u=document.getElementById("addTaskButton");u&&(u.onclick=function(){const e=document.getElementById("inputTask").value.trim();if(""==e)return void r("Task cannot be blank....");m("Please wait...");const o={title:e},a={Authorization:"Token "+localStorage.getItem("token")};t({headers:a,url:g+"todo/create/",method:"POST",data:o}).then((function({data:t,status:e}){c("Todo added successfully..."),document.getElementById("inputTask").value="",n()})).catch((function(t){r("Unable to add the task. Please try again...")}))});const l=document.getElementById("searchTaskButton");function c(t){iziToast.success({title:"Success",message:t})}function r(t){iziToast.error({title:"Error",message:t})}function m(t){iziToast.info({title:"Info",message:t})}l&&(l.onclick=function(){const e=document.getElementById("searchTask").value.trim();if(""==e)return void r("Task cannot be blank....");m("Please wait...");const n={Authorization:"Token "+localStorage.getItem("token")};t({headers:n,url:g+"todo/",method:"GET"}).then((function({data:t,status:n}){console.log(t);for(var i=0;i<t.length;i++)if(t[i].title==e)return a.innerHTML="",c("Task found..."),void o(t[i].id,t[i].title);r("The specified task wasn't found...")}))});const g="https://todo-app-csoc.herokuapp.com/";function h(t){document.getElementById("task-"+t).classList.add("hideme"),document.getElementById("task-actions-"+t).classList.add("hideme"),document.getElementById("input-button-"+t).classList.remove("hideme"),document.getElementById("done-button-"+t).classList.remove("hideme")}function p(e){m("Please wait...");const o={Authorization:"Token "+localStorage.getItem("token")};t({headers:o,url:g+"todo/"+e+"/",method:"DELETE"}).then((function({data:t,status:e}){c("Todo deleted successfully..."),n()})).catch((function(t){r("Unable to delete the given task. Please try again...")}))}function k(e){const o=document.getElementById("input-button-"+e).value.trim(),a=document.getElementById("task-"+e);if(""==o)return void r("The task title can't be blank");const i={title:o},s={Authorization:"Token "+localStorage.getItem("token")};t({headers:s,url:g+"todo/"+e+"/",method:"PUT",data:i}).then((function({data:t,status:e}){a.textContent=t.title,h(t.id),c("Todo updated successfully..."),n()})).catch((function(t){r("Unable to update the task. Please try again...")}))}
